{"version":3,"sources":["Components/Footer.module.scss","../../src/constants.js","../../src/utils.js","../../src/state/network/types.js","../../src/state/network/reducer.js","../../src/state/network/actions.js","../../src/state/network/Context.jsx","../../src/state/network/NetworkProvider.jsx","../../node_modules/style-inject/dist/style-inject.es.js","../../src/Components/Common/Button.jsx","../../src/Components/Import/ImportHAR.jsx","../../src/Components/Common/Dropdown.jsx","../../src/Components/Filters/Search.jsx","../../src/state/theme/Context.jsx","../../src/Components/Common/Checkbox.jsx","../../src/Components/Filters/ErrorFilter.jsx","../../src/Components/Import/Reset.jsx","../../src/Containers/FilterContainer.jsx","../../src/Components/NetworkTable/NetworkTableHeader.jsx","../../src/Components/NetworkTable/TimeChartTooltip.jsx","../../src/Components/NetworkTable/TimeChart.jsx","../../src/Components/NetworkTable/NetworkCellValue.jsx","../../src/Components/NetworkTable/NetworkTableRow.jsx","../../src/Components/ErrorMessage.jsx","../../src/Components/Import/CORSCheckbox.jsx","../../src/Components/Import/URLInput.jsx","../../src/Components/Import/InputHAR.jsx","../../src/Containers/NetworkTableContainer.jsx","../../src/Components/LoaderContainer.jsx","../../src/Components/Common/Tabs.jsx","../../src/Components/Common/Tab.jsx","../../src/Components/ReqDetail/headers/General.jsx","../../src/Components/ReqDetail/headers/Response.jsx","../../src/Components/ReqDetail/headers/Request.jsx","../../src/Components/ReqDetail/headers/QueryString.jsx","../../src/Components/ReqDetail/headers/FormData.jsx","../../src/icons/IconCaretUp.jsx","../../src/Components/ReqDetail/headers/HeaderTitle.jsx","../../src/Components/ReqDetail/headers/HeaderInfo.jsx","../../src/Components/ReqDetail/headers/RequestPayload.jsx","../../src/Components/ReqDetail/Headers.jsx","../../src/icons/IconCloseSign.jsx","../../src/Components/ReqDetail/Response.jsx","../../src/Containers/ReqDetailContainer.jsx","../../src/Components/TimelineChart/TimelineDatapoint.jsx","../../src/Components/TimelineChart/TimelineTooltip.jsx","../../src/Components/TimelineChart/TimelineChart.jsx","../../src/Containers/TimelineContainer.jsx","../../src/Components/NetworkTable/NetworkTableFooter.jsx","../../src/Containers/MainContainer.jsx","../../src/NetworkViewer.jsx","Components/Footer.jsx","App.jsx","utils.js","index.jsx","App.module.scss"],"names":["module","exports","VIEWER_FIELDS","Object","file","key","name","status","method","domain","type","size","time","FILTERS","filterBy","value","TIMINGS","queueing","dataKey","fill","blocked","dns","ssl","connect","send","wait","receive","TIME_CHART_SVG_PROPS","width","height","viewBox","version","preserveAspectRatio","TIME_CHART_DEFAULT_PROPS","y","ROW_ID_PREFIX","GENERAL_HEADERS","url","serverIPAddress","HEADERS_TITLES","general","response","request","queryString","formData","requestPayload","NETWORK_VIEWER_DEFAULT_OPTIONS","showImportHAR","showTimeline","PAYLOAD_CAPTIONS","encode","true","false","parse","roundOff","decimal","base","Math","formatSize","bytes","formatTime","getUrlInfo","urlInfo","URL","pathSplit","fileName","filename","href","parseSize","bodySize","_transferSize","headers","content","contentInfo","includes","getContentType","entry","getTimings","startedDateTime","startTime","Date","getTime","firstEntryTime","getContent","mimeType","text","parsedJson","JSON","err","getEntryTransferredSize","getEntryUncompressedSize","sortHeaders","current","next","getHeaders","postData","getTotalTimeOfEntry","timings","getInterceptError","prepareViewerData","entries","totalNetworkTime","data","totalRequests","totalTransferredSize","totalUncompressedSize","finishTime","endTime","lastTimeOfEntry","index","body","transferredSize","uncompressedSize","error","finishTimes","acc","durationInMS","calculateFinishTime","sortBy","isAsc","prev","filterCondition","filter","info","filterData","errorFilter","search","trimmedSearch","isSearchMatched","isErrorMatched","isFilterMatched","parseTime","calcTotalTime","getStatusClass","calcChartAttributes","maxTime","cx","cy","startTimePercent","previousX","previousWidth","chartAttributes","timingInfo","x","findRequestIndex","timestamp","position","exactTimestamp","resultIndex","findIndexBeforeTimestamp","findIndexAfterTimestamp","currentValue","currentIndex","findIndexNearTimestamp","calculateTimings","pages","DOMContentLoaded","onLoad","pageTimings","getSummary","req","UPDATE_DATA","UPDATE_SEARCH","UPDATE_SORT","UPDATE_FILTER","UPDATE_ERROR_FILTER","UPDATE_ERROR_MESSAGE","UPDATE_SCROLL_TO_INDEX","SELECT_REQUEST","FETCH_FILE","RESET","initialState","Map","List","actualData","dataSummary","sort","isAcs","loading","scrollToIndex","selectedReqIndex","showReqDetail","reqDetail","reducer","state","payload","sortedData","newState","finish","summary","types","updateData","dispatch","updateSearch","updateSort","updateFilter","updateErrorFilter","fetchFileRequest","fetchFileSuccess","fetchFileFailure","updateErrorMessage","updateScrollToIndex","selectRequest","resetState","NetworkContext","React","useNetwork","context","useContext","Error","actions","actionsWrapper","NetworkProvider","props","fetchOptions","scrollTimeStamp","scrollRequestPosition","autoHighlightChange","onDataLoaded","onDataError","useReducer","useMemo","requestData","useEffect","options","withCredentials","axios","title","description","message","fetchFile","reqIndex","setTimeout","element","document","alignToTop","behavior","styleInject","css","ref","insertAt","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","PropTypes","number","classNames","Button","category","children","className","disabled","material","raised","combinedClasses","TagName","DROP_FILE_CONFIG","accept","multiple","ImportHar","showButton","useDropzone","onDrop","files","reader","newNetworkData","prepareData","getRootProps","getInputProps","Styles","bool","Dropdown","items","selected","onChange","useState","isExpand","setExpand","selectedKey","setSelection","dropdownItemsRef","useRef","isExpandRef","updateToggle","toggleState","removeFocus","target","window","expanded","active","onClick","list","role","tabIndex","SEARCH_CATEGORY","Search","placeholder","string","ThemeContext","useTheme","ThemeProvider","finalOptions","object","Checkbox","containerClassName","isChecked","checked","ErrorFilter","isError","isRequired","Reset","onReset","FilterContainer","filterByError","Row","Col","md","sm","xs","selectedFilter","buttonStyle","NetworkTableHeader","thead","datakey","DETAIL","TimeChartTooltip","tooltipData","queuedAt","startedAt","totalTime","prepareTooltipData","tooltip","TimeChart","isOpen","updateOpen","Popover","preferPlace","onMouseOut","onMouseOver","chartProps","NetworkCellValue","unit","formattedValue","formatValue","NetworkTableRow","scrollHighlight","onSelect","rowProps","highlight","id","ErrorMessage","any","CORSCheckbox","isEnabled","URLInput","onSubmit","setURL","isCORSEnabled","setCORS","SAMPLE_HAR_URL","InputHAR","fetchInfo","origin","pathname","newURL","stringify","rel","NetworkTableContainer","onRequestSelect","handleReqSelect","table","Array","rowInfo","func","LoaderContainer","show","spinnerColor","uniqueId","spin","xmlns","offset","stopColor","stopOpacity","r","stroke","strokeWidth","Tabs","onUpdate","defaultSelectedKey","navTabsClassName","tabsContainerClassName","navLinkClassName","activeClassName","updateItems","itemsCollection","component","activeTab","updateTab","item","selectedTab","renderItem","Tab","General","Response","Request","QueryString","isPayloadTransformed","decodeURIComponent","FormData","IconCaretUp","d","fillRule","HeaderTitle","eventKey","isEncodeEnabled","onPayloadTransform","isParseEnabled","payloadStatus","HeaderInfo","isVisible","updateVisibleStates","updateTransform","handlePayloadTransform","ChildComponent","onChangeEncode","RequestPayload","payloadData","parsedData","parseRequestPayload","Headers","IconCloseSign","strokeLinecap","transform","NoResponseText","ReqDetailContainer","TimelineDatapoint","TimelineTooltip","array","TimelineChart","chartData","ResponsiveContainer","ScatterChart","XAxis","axisLine","interval","orientation","tickCount","tickFormatter","tickLine","YAxis","hide","reversed","Tooltip","Scatter","shape","TimelineContainer","NetworkTableFooter","showAllInfo","MainContainer","contextClassNames","NetworkViewer","Footer","footer","link","bind","App","isDataLoaded","setIsDataLoaded","fileOptions","setFileOptions","networkContainerClassName","location","ignoreQueryPrefix","keys","length","parseQueryString","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ee1439ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"brandBlue\":\"#1395f0\",\"footer\":\"Footer_footer__2z7ZP\",\"link\":\"Footer_link__1Ho9O\"};","export const VIEWER_FIELDS = Object.freeze({\n  file: Object.freeze({\n    key: 'filename',\n    name: 'File',\n  }),\n  status: Object.freeze({\n    key: 'status',\n    name: 'Status',\n  }),\n  method: Object.freeze({\n    key: 'method',\n    name: 'Method',\n  }),\n  domain: Object.freeze({\n    key: 'domain',\n    name: 'Domain',\n  }),\n  type: Object.freeze({\n    key: 'type',\n    name: 'Type',\n  }),\n  size: Object.freeze({\n    key: 'size',\n    name: 'Size',\n  }),\n  time: Object.freeze({\n    key: 'time',\n    name: 'Time',\n  }),\n});\n\nexport const DEFAULT_FILTER = {\n  name: null,\n  value: null,\n};\n\nexport const FILTERS = [\n  {\n    name: 'All',\n    filterBy: DEFAULT_FILTER,\n  },\n  {\n    name: 'XHR',\n    filterBy: {\n      name: 'type',\n      value: ['xhr', 'XHR', 'fetch'],\n    },\n  },\n  {\n    name: 'JS',\n    filterBy: {\n      name: 'type',\n      value: ['script', 'javascript', 'x-javascript', 'json'],\n    },\n  },\n  {\n    name: 'CSS',\n    filterBy: {\n      name: 'type',\n      value: ['stylesheet', 'css'],\n    },\n  },\n  {\n    name: 'Img',\n    filterBy: {\n      name: 'type',\n      value: ['image', 'png', 'jpeg', 'svg+xml', 'gif'],\n    },\n  },\n  {\n    name: 'Media',\n    filterBy: {\n      name: 'type',\n      value: ['media'],\n    },\n  },\n  {\n    name: 'Font',\n    filterBy: {\n      name: 'type',\n      value: ['font', 'woff2'],\n    },\n  },\n  {\n    name: 'Doc',\n    filterBy: {\n      name: 'type',\n      value: ['document', 'html'],\n    },\n  },\n  {\n    name: 'WS',\n    filterBy: {\n      name: 'type',\n      value: ['websocket'],\n    },\n  },\n  {\n    name: 'Manifest',\n    filterBy: {\n      name: 'type',\n      value: ['manifest.json'],\n    },\n  },\n];\n\nexport const FETCH_FILE_LOAD_TEXT = 'Please wait, Fetching file is in progress.';\n\nexport const TIMINGS = {\n  queueing: {\n    dataKey: '_blocked_queueing',\n    fill: '#ccc',\n    name: 'Queueing',\n  },\n  blocked: {\n    dataKey: 'blocked',\n    fill: '#A1000C',\n    name: 'Stalled',\n  },\n  dns: {\n    dataKey: 'dns',\n    fill: '#DCC9E5',\n    name: 'DNS Lookup',\n  },\n  ssl: {\n    dataKey: 'ssl',\n    fill: '#E78057',\n    name: 'SSL',\n  },\n  connect: {\n    dataKey: 'connect',\n    fill: '#DB8553',\n    name: 'Initial Connection',\n  },\n  send: {\n    dataKey: 'send',\n    fill: '#3C96C4',\n    name: 'Request Sent',\n  },\n  wait: {\n    dataKey: 'wait',\n    fill: '#7CA0BF',\n    name: 'Waiting (TTFB)',\n  },\n  receive: {\n    dataKey: 'receive',\n    fill: '#65B955',\n    name: 'Content Downloaded',\n  },\n};\n\nexport const TIME_CHART_SVG_PROPS = {\n  width: '100%',\n  height: '20',\n  viewBox: '0 0 250 20',\n  version: '1.1',\n  preserveAspectRatio: 'xMinYMin meet',\n};\n\nexport const TIME_CHART_DEFAULT_PROPS = {\n  height: 16,\n  y: 3.5,\n};\n\nexport const ROW_ID_PREFIX = 'network-viewer-table-row-';\n\nexport const GENERAL_HEADERS = Object.freeze({\n  url: Object.freeze({\n    key: 'url',\n    name: 'Request URL',\n  }),\n  method: Object.freeze({\n    key: 'method',\n    name: 'Request Method',\n  }),\n  status: Object.freeze({\n    key: 'status',\n    name: 'Status Code',\n  }),\n  serverIPAddress: Object.freeze({\n    key: 'serverIPAddress',\n    name: 'Remote Address',\n  }),\n});\n\nexport const HEADERS_TITLES = Object.freeze({\n  general: Object.freeze({\n    key: 'general',\n    name: 'General',\n  }),\n  response: Object.freeze({\n    key: 'response',\n    name: 'Response Headers',\n  }),\n  request: Object.freeze({\n    key: 'request',\n    name: 'Request Headers',\n  }),\n  queryString: Object.freeze({\n    key: 'queryString',\n    name: 'Query String Parameters',\n  }),\n  formData: Object.freeze({\n    key: 'formaData',\n    name: 'Form Data',\n  }),\n  requestPayload: Object.freeze({\n    key: 'requestPayload',\n    name: 'Request Payload',\n  }),\n});\n\nexport const MAX_COLOR_CONTENT_SIZE = 100000; // 100kB\nexport const TIMELINE_DATA_POINT_HEIGHT = 2;\nexport const NETWORK_VIEWER_DEFAULT_OPTIONS = {\n  showImportHAR: true,\n  showTimeline: false,\n};\n\nexport const PAYLOAD_CAPTIONS = Object.freeze({\n  encode: Object.freeze({\n    true: 'URL encoded',\n    false: 'decoded',\n  }),\n  parse: Object.freeze({\n    true: 'source',\n    false: 'parsed',\n  }),\n});\n","import { TIMINGS, TIMELINE_DATA_POINT_HEIGHT } from './constants';\n\n/* eslint no-underscore-dangle: 0 */\n\nexport const roundOff = (value, decimal = 1) => {\n  const base = 10 ** decimal;\n  return Math.round(value * base) / base;\n};\n\nexport const formatSize = (bytes) => {\n  if (bytes < 1024) {\n    return `${roundOff(bytes)} B`;\n  }\n  if (bytes < (1024 ** 2)) {\n    return `${roundOff(bytes / 1024)} KB`;\n  }\n  return `${roundOff(bytes / (1024 ** 2))} MB`;\n};\n\nexport const formatTime = (time) => {\n  if (time < 1000) {\n    return `${Math.round(time)}ms`;\n  }\n  if (time < 60000) {\n    return `${Math.ceil(time / 10) / 100}s`;\n  }\n  return `${(Math.ceil(time / 60000) * 100) / 100}m`;\n};\n\nexport const getUrlInfo = (url) => {\n  const urlInfo = new URL(url);\n  const pathSplit = urlInfo.pathname.split('/');\n  const fileName = (\n    pathSplit[pathSplit.length - 1].trim() ?\n      pathSplit[pathSplit.length - 1] : pathSplit[pathSplit.length - 2]\n  ) + urlInfo.search;\n\n  return {\n    domain: urlInfo.host,\n    filename: fileName || urlInfo.href,\n    url: urlInfo.href,\n  };\n};\n\nexport const parseSize = ({ bodySize, _transferSize, headers, content }) => {\n  if (content && content.size) {\n    return formatSize(content.size);\n  }\n  if (_transferSize > -1) {\n    return formatSize(_transferSize);\n  }\n  if (bodySize > -1) {\n    return formatSize(bodySize);\n  }\n  const contentInfo = headers.find(({ name }) => ['content-length', 'Content-Length'].includes(name));\n  if (!contentInfo) {\n    return 0;\n  }\n\n  return formatSize(contentInfo.value);\n};\n\nexport const getContentType = (entry) => {\n  if (entry._resourceType) {\n    return entry._resourceType.toLowerCase();\n  }\n\n  const { headers } = entry.response;\n  const contentInfo = headers.find(({ name }) => ['content-type', 'Content-Type'].includes(name));\n  if (!contentInfo) {\n    return '';\n  }\n  const type = contentInfo.value.split(';')[0].split('/');\n  return type.length > 1 ? type[1] : type[0];\n};\n\nexport const getTimings = ({ startedDateTime, timings }, firstEntryTime) => ({\n  ...timings,\n  startTime: new Date(startedDateTime).getTime() - new Date(firstEntryTime).getTime(),\n});\n\nexport const getContent = ({ mimeType, text }) => {\n  if (mimeType === 'application/json') {\n    let parsedJson = text;\n    try {\n      parsedJson = JSON.stringify(JSON.parse(text), null, 2);\n    } catch (err) {\n      parsedJson = text;\n    }\n    return parsedJson;\n  }\n\n  return text;\n};\n\nexport const getEntryTransferredSize = ({ response }) => {\n  const { bodySize, _transferSize } = response;\n  if (_transferSize > -1) {\n    return _transferSize;\n  }\n\n  if (bodySize > -1) {\n    return bodySize;\n  }\n  return -1;\n};\n\nexport const getEntryUncompressedSize = ({ response }) => {\n  const { bodySize, _transferSize, content: { size } } = response;\n  if (size > 0) {\n    return size;\n  }\n  if (_transferSize > -1) {\n    return _transferSize;\n  }\n  if (bodySize > -1) {\n    return bodySize;\n  }\n  return -1;\n};\n\nexport const calculateFinishTime = (data) => {\n  const finishTimes = data.map(({ timings }) => (\n    Object.values(timings).reduce((acc, durationInMS) => (\n      acc + (durationInMS > -1 ? durationInMS : 0)\n    ), 0)));\n  return Math.max(...finishTimes);\n};\n\nexport const sortHeaders = (current, next) => {\n  if (current.name < next.name) {\n    return -1;\n  }\n  return current.name > next.name ? 1 : 0;\n};\n\nexport const getHeaders = (entry) => ({\n  request: entry.request.headers.sort(sortHeaders),\n  response: entry.response.headers.sort(sortHeaders),\n  queryString: entry.request.queryString,\n  postData: entry.request.postData,\n});\n\nexport const getTotalTimeOfEntry = ({ startedDateTime, time, timings }) => (\n  new Date(startedDateTime).getTime() + time + (timings._blocked_queueing || 0)\n);\n\nexport const getInterceptError = ({ response }) => (\n  response && response._error ? response._error : null\n);\n\nexport const prepareViewerData = (entries) => {\n  if (!entries.length) {\n    return {\n      totalNetworkTime: 0,\n      data: [],\n      totalRequests: 0,\n      totalTransferredSize: 0,\n      totalUncompressedSize: 0,\n      finishTime: 0,\n    };\n  }\n\n  const firstEntryTime = entries[0].startedDateTime;\n  let endTime = getTotalTimeOfEntry(entries[entries.length - 1]);\n  let totalTransferredSize = 0;\n  let totalUncompressedSize = 0;\n  const data = entries\n    .filter((entry) => entry.response && getUrlInfo(entry.request.url).domain)\n    .map((entry, index) => {\n      totalTransferredSize += getEntryTransferredSize(entry);\n      totalUncompressedSize += getEntryUncompressedSize(entry);\n      const lastTimeOfEntry = getTotalTimeOfEntry(entry);\n      endTime = endTime < lastTimeOfEntry ? lastTimeOfEntry : endTime;\n      return {\n        index,\n        status: entry.response.status,\n        method: entry.request.method,\n        size: parseSize(entry.response),\n        startedDateTime: new Date(entry.startedDateTime).getTime(),\n        type: getContentType(entry),\n        timings: getTimings(entry, firstEntryTime),\n        body: getContent(entry.response.content),\n        time: entry.time,\n        serverIPAddress: entry.serverIPAddress || ':80',\n        headers: getHeaders(entry),\n        transferredSize: getEntryTransferredSize(entry),\n        uncompressedSize: getEntryUncompressedSize(entry),\n        error: getInterceptError(entry),\n        ...getUrlInfo(entry.request.url),\n      };\n    });\n\n  const totalRequests = data.length;\n  const totalNetworkTime = endTime - new Date(firstEntryTime).getTime();\n  const finishTime = calculateFinishTime(data);\n  return {\n    totalNetworkTime,\n    data,\n    totalRequests,\n    totalTransferredSize,\n    totalUncompressedSize,\n    finishTime,\n  };\n};\n\nexport const sortBy = (data, key, isAsc = true) => data.sort((prev, next) => {\n  if (prev[key] < next[key]) {\n    return isAsc ? -1 : 1;\n  }\n  if (prev[key] > next[key]) {\n    return isAsc ? 1 : 1;\n  }\n  return 0;\n});\n\nexport const filterCondition = ({ filter, info }) => {\n  switch (filter.name) {\n    case 'error':\n      return info.status >= 400 || info.error;\n    case 'type':\n    default:\n      return filter.value.includes(info[filter.name]);\n  }\n};\n\nexport const filterData = ({\n  data,\n  errorFilter,\n  filter = {},\n  search = {},\n}) => {\n  const trimmedSearch = search.value && search.value.trim();\n\n  return !trimmedSearch && !filter.name && !errorFilter ?\n    data :\n    data.filter((info) => {\n      const isSearchMatched = trimmedSearch ?\n        info[search.name] && info[search.name].includes(trimmedSearch) : true;\n      const isErrorMatched = errorFilter ? filterCondition({ filter: { name: 'error' }, info }) : true;\n      const isFilterMatched = filter.name ? filterCondition({ filter, info }) : true;\n      return isSearchMatched && isErrorMatched && isFilterMatched;\n    });\n};\n\nexport const actionsWrapper = (actions = {}) => (dispatch, state) => Object.keys(actions)\n  .reduce((modifiedActions, type) => ({\n    ...modifiedActions,\n    [type]: actions[type](dispatch, state),\n  }), {});\n\nexport const parseTime = (time) => {\n  if (!time) {\n    return time;\n  }\n\n  if (time > 1000) {\n    return `${(time / 1000).toFixed(2)} s`;\n  }\n\n  return `${time.toFixed(2)} ms`;\n};\n\nexport const calcTotalTime = (data) => {\n  const total = Object.keys(data)\n    .filter((key) => !['_blocked_queueing', 'startTime'].includes(key))\n    .reduce((acc, key) => acc + data[key], 0);\n  return total;\n};\n\nexport const prepareTooltipData = (data) => ({\n  queuedAt: parseTime(data.startTime),\n  startedAt: parseTime(data.startTime + data._blocked_queueing),\n  totalTime: parseTime(calcTotalTime(data)),\n  ...(Object.keys(data).reduce((acc, key) => {\n    acc[key] = parseTime(data[key]);\n    return acc;\n  }, {})\n  ),\n});\n\nexport const getStatusClass = ({ status, error }) => {\n  if (status === 0 && !error) {\n    return 'pending';\n  }\n  if (status >= 400 || error) {\n    return 'error';\n  }\n  return 'info';\n};\n\nexport const formatValue = (key, value, unit, request = {}) => {\n  switch (key) {\n    case 'time':\n      return value === 0 && !request.error ? 'Pending' : parseTime(value);\n    case 'status':\n      if (request.error) {\n        return '(failed)';\n      }\n      return value === 0 ? 'Pending' : value;\n    default:\n      return !unit ? value : `${value} ${unit}`;\n  }\n};\n\nexport const calcChartAttributes = (data, maxTime, cx, index, cy = null) => {\n  const startTimePercent = (data.startTime / maxTime) * 100;\n  let previousX = 0;\n  let previousWidth = 0;\n  const chartAttributes = [];\n\n  Object.keys(TIMINGS).forEach((key) => {\n    const timingInfo = TIMINGS[key];\n    const value = data[timingInfo.dataKey];\n    if (value <= 0) {\n      return;\n    }\n\n    previousX += !previousWidth ? startTimePercent : previousWidth;\n    previousWidth = value > 0 ? (value / maxTime) * 100 : 0;\n\n    chartAttributes.push({\n      width: `${previousWidth}%`,\n      y: index ? ((index % 10) * (TIMELINE_DATA_POINT_HEIGHT + 1)) + 40 : cy,\n      x: `${previousX}%`,\n      fill: timingInfo.fill,\n      key,\n    });\n  });\n\n  return chartAttributes;\n};\n\nexport const findIndexNearTimestamp = (data, exactTimestamp) => (\n  data.reduce((\n    { value, index }, { startedDateTime: currentValue, index: currentIndex }) => (\n    Math.abs(currentValue - exactTimestamp) < Math.abs(value - exactTimestamp) ?\n      { value: currentValue, index: currentIndex } : { value, index }\n  ), { value: 0, index: 0 }).index\n);\n\nexport const findIndexBeforeTimestamp = (data, exactTimestamp) => {\n  const resultIndex = data.reverse()\n    .findIndex(({ startedDateTime }) => startedDateTime <= exactTimestamp);\n  return resultIndex < 0 ? 0 : data.size - (resultIndex + 1);\n};\n\nexport const findIndexAfterTimestamp = (data, exactTimestamp) => (\n  data.findIndex(({ startedDateTime }) => startedDateTime >= exactTimestamp)\n);\n\nexport const findRequestIndex = ({ data, timestamp, position }) => {\n  switch (position) {\n    case 'before':\n      return findIndexBeforeTimestamp(data, timestamp);\n    case 'after':\n      return findIndexAfterTimestamp(data, timestamp);\n    case 'near':\n    default:\n      return findIndexNearTimestamp(data, timestamp);\n  }\n};\n\nexport const calculateTimings = (pages) => (\n  pages.reduce(({ DOMContentLoaded, onLoad }, { pageTimings }) => ({\n    DOMContentLoaded: DOMContentLoaded + pageTimings.onContentLoad,\n    onLoad: onLoad + pageTimings.onLoad,\n  }), { DOMContentLoaded: 0, onLoad: 0 }));\n\nexport const getSummary = (data) => (\n  data.reduce((acc, req) => {\n    acc.totalTransferredSize += req.transferredSize;\n    acc.totalUncompressedSize += req.uncompressedSize;\n    return acc;\n  }, {\n    totalTransferredSize: 0,\n    totalUncompressedSize: 0,\n    totalRequests: data.size,\n  })\n);\n\nexport const parseRequestPayload = (text) => {\n  let parsedJson = text;\n  try {\n    parsedJson = JSON.stringify(JSON.parse(text), null, 2);\n  } catch (err) {\n    parsedJson = text;\n  }\n  return parsedJson;\n};\n","export const UPDATE_DATA = 'UPDATE_DATA';\nexport const UPDATE_SEARCH = 'UPDATE_SEARCH';\nexport const UPDATE_SORT = 'UPDATE_SORT';\nexport const UPDATE_FILTER = 'UPDATE_FILTER';\nexport const UPDATE_ERROR_FILTER = 'UPDATE_ERROR_FILTER';\nexport const UPDATE_ERROR_MESSAGE = 'UPDATE_ERROR_MESSAGE';\nexport const UPDATE_SCROLL_TO_INDEX = 'UPDATE_SCROLL_TO_INDEX';\nexport const SELECT_REQUEST = 'SELECT_REQUEST';\nexport const FETCH_FILE = {\n  REQUEST: 'FETCH_FILE_REQUEST',\n  SUCCESS: 'FETCH_FILE_SUCCESS',\n  FAILURE: 'FETCH_FILE_FAILURE',\n};\nexport const RESET = 'RESET';\n","import { Map, List } from 'immutable';\n\nimport { filterData, sortBy, prepareViewerData, calculateTimings, getSummary } from './../../utils';\nimport * as types from './types';\n\nconst initialState = new Map({\n  data: new List(),\n  actualData: new List(),\n  totalNetworkTime: null,\n  dataSummary: new Map(),\n  sort: {\n    key: 'startedDateTime',\n    isAcs: true,\n  },\n  search: {\n    name: 'url',\n    value: '',\n  },\n  filter: {\n    name: null,\n    value: null,\n  },\n  errorFilter: false,\n  error: null,\n  loading: false,\n  scrollToIndex: null,\n  selectedReqIndex: null,\n  showReqDetail: false,\n  reqDetail: null,\n});\n\nconst reducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case types.UPDATE_DATA: {\n      return state.withMutations((newState) => {\n        const sort = state.get('sort');\n        const {\n          data,\n          totalNetworkTime,\n          totalRequests,\n          totalTransferredSize,\n          totalUncompressedSize,\n          finishTime,\n        } = prepareViewerData(payload.entries);\n        const sortedData = new List(sortBy(data, sort.key, sort.isAcs));\n        newState\n          .set('error', null)\n          .set('data', sortedData)\n          .set('actualData', sortedData)\n          .set('totalNetworkTime', totalNetworkTime)\n          .set('dataSummary', new Map({\n            totalRequests,\n            totalTransferredSize,\n            totalUncompressedSize,\n            finishTime,\n            timings: calculateTimings(payload.pages),\n            finish: finishTime,\n          }));\n      });\n    }\n    case types.UPDATE_SEARCH: {\n      return state.withMutations((newState) => {\n        const data = filterData({\n          data: state.get('actualData'),\n          filter: state.get('filter'),\n          search: payload,\n          errorFilter: state.get('errorFilter'),\n        });\n        const summary = getSummary(data);\n        newState\n          .set('search', payload)\n          .set('data', data)\n          .setIn(['dataSummary', 'totalRequests'], summary.totalRequests)\n          .setIn(['dataSummary', 'totalTransferredSize'], summary.totalTransferredSize)\n          .setIn(['dataSummary', 'totalUncompressedSize'], summary.totalUncompressedSize);\n      });\n    }\n    case types.UPDATE_FILTER: {\n      return state.withMutations((newState) => {\n        const data = filterData({\n          data: state.get('actualData'),\n          filter: payload,\n          search: state.get('search'),\n          errorFilter: state.get('errorFilter'),\n        });\n        const summary = getSummary(data);\n        newState\n          .set('filter', payload)\n          .set('data', data)\n          .setIn(['dataSummary', 'totalRequests'], summary.totalRequests)\n          .setIn(['dataSummary', 'totalTransferredSize'], summary.totalTransferredSize)\n          .setIn(['dataSummary', 'totalUncompressedSize'], summary.totalUncompressedSize);\n      });\n    }\n    case types.UPDATE_ERROR_FILTER: {\n      return state.withMutations((newState) => {\n        const data = filterData({\n          data: state.get('actualData'),\n          filter: state.get('filter'),\n          search: state.get('search'),\n          errorFilter: payload,\n        });\n        const summary = getSummary(data);\n        newState\n          .set('errorFilter', payload)\n          .set('data', data)\n          .setIn(['dataSummary', 'totalRequests'], summary.totalRequests)\n          .setIn(['dataSummary', 'totalTransferredSize'], summary.totalTransferredSize)\n          .setIn(['dataSummary', 'totalUncompressedSize'], summary.totalUncompressedSize);\n      });\n    }\n    case types.UPDATE_SORT: {\n      return state.withMutations((newState) => {\n        newState\n          .set('sort', payload)\n          .set('data', sortBy(state.get('data'), payload.key, payload.isAcs));\n      });\n    }\n    case types.FETCH_FILE.REQUEST: {\n      return state.withMutations((newState) => {\n        newState\n          .set('error', null)\n          .set('loading', true);\n      });\n    }\n    case types.FETCH_FILE.SUCCESS: {\n      return state.withMutations((newState) => {\n        newState\n          .set('error', null)\n          .set('loading', false);\n      });\n    }\n    case types.FETCH_FILE.FAILURE:\n    case types.UPDATE_ERROR_MESSAGE: {\n      return state.withMutations((newState) => {\n        newState\n          .set('error', payload)\n          .set('loading', false);\n      });\n    }\n    case types.UPDATE_SCROLL_TO_INDEX: {\n      return state.withMutations((newState) => {\n        newState\n          .set('selectedReqIndex', payload ? payload.index : null)\n          .set('reqDetail', payload);\n      });\n    }\n    case types.SELECT_REQUEST: {\n      return state.withMutations((newState) => {\n        newState\n          .set('selectedReqIndex', payload ? payload.index : null)\n          .set('reqDetail', payload)\n          .set('showReqDetail', !!payload);\n      });\n    }\n    case types.RESET: {\n      return initialState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport { initialState, reducer };\nexport default reducer;\n","import axios from 'axios';\n\nimport * as types from './types';\n\nexport const updateData = (dispatch) => (payload) => dispatch({\n  type: types.UPDATE_DATA,\n  payload,\n});\n\nexport const updateSearch = (dispatch) => (payload) => dispatch({\n  type: types.UPDATE_SEARCH,\n  payload,\n});\n\nexport const updateSort = (dispatch) => (payload) => dispatch({\n  type: types.UPDATE_SORT,\n  payload,\n});\n\nexport const updateFilter = (dispatch) => (payload) => dispatch({\n  type: types.UPDATE_FILTER,\n  payload,\n});\n\nexport const updateErrorFilter = (dispatch) => (payload) => dispatch({\n  type: types.UPDATE_ERROR_FILTER,\n  payload,\n});\n\nexport const fetchFileRequest = (dispatch) => (payload) => dispatch({\n  type: types.FETCH_FILE.REQUEST, payload,\n});\n\nexport const fetchFileSuccess = (dispatch) => (payload) => dispatch({\n  type: types.FETCH_FILE.SUCCESS, payload,\n});\n\nexport const fetchFileFailure = (dispatch) => (payload) => dispatch({\n  type: types.FETCH_FILE.FAILURE, payload,\n});\n\nexport const updateErrorMessage = (dispatch) => (payload) => dispatch({\n  type: types.UPDATE_ERROR_MESSAGE, payload,\n});\n\nexport const updateScrollToIndex = (dispatch) => (payload) => dispatch({\n  type: types.UPDATE_SCROLL_TO_INDEX, payload,\n});\n\nexport const selectRequest = (dispatch) => (payload) => dispatch({\n  type: types.SELECT_REQUEST, payload,\n});\n\nexport const resetState = (dispatch) => (payload) => dispatch({\n  type: types.RESET, payload,\n});\n\nexport const fetchFile = (dispatch) => (file, options = { withCredentials: true }) => {\n  fetchFileRequest(dispatch)();\n  axios.get(file, options)\n    .then(({ data }) => {\n      if (data && data.log) {\n        updateData(dispatch)(data.log);\n      }\n      fetchFileSuccess(dispatch)();\n    })\n    .catch((error) => fetchFileFailure(dispatch)({\n      title: 'Error while fetching file',\n      description: error.message,\n    }));\n};\n","import React, { useContext } from 'react';\n\nimport { actionsWrapper } from './../../utils';\nimport * as actions from './actions';\n\nexport const NetworkContext = React.createContext();\n\nexport const useNetwork = () => {\n  const context = useContext(NetworkContext);\n  if (!context) {\n    throw new Error('useNetwork must be used within a NetworkProvider');\n  }\n  const [state, dispatch] = context;\n\n  const wrappedActions = actionsWrapper({\n    updateData: actions.updateData,\n    updateSearch: actions.updateSearch,\n    updateSort: actions.updateSort,\n    updateFilter: actions.updateFilter,\n    updateErrorMessage: actions.updateErrorMessage,\n    selectRequest: actions.selectRequest,\n    updateScrollToIndex: actions.updateScrollToIndex,\n    updateErrorFilter: actions.updateErrorFilter,\n    resetState: actions.resetState,\n  })(dispatch, state);\n\n  return {\n    state,\n    dispatch,\n    actions: wrappedActions,\n  };\n};\n","import React, { useEffect, useReducer, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { reducer, initialState as defaultState } from './reducer';\nimport { updateData, fetchFile, updateScrollToIndex } from './actions';\nimport { NetworkContext } from './Context';\nimport { findRequestIndex } from '../../utils';\nimport { ROW_ID_PREFIX } from '../../constants';\n\nconst NetworkProvider = (props) => {\n  const {\n    data,\n    file,\n    fetchOptions,\n    initialState,\n    scrollTimeStamp,\n    scrollRequestPosition,\n    autoHighlightChange,\n    onDataLoaded,\n    onDataError,\n  } = props;\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = useMemo(() => [state, dispatch], [state]);\n  const selectedReqIndex = value[0].get('selectedReqIndex');\n  const requestData = value[0].get('data');\n  const showReqDetail = value[0].get('showReqDetail');\n  const actualData = value[0].get('actualData');\n  const error = value[0].get('error');\n\n  // Update data onChange of network data\n  useEffect(() => {\n    if (data && data.log && data.log.entries) {\n      updateData(dispatch)({\n        entries: data.log.entries,\n        pages: data.log.pages,\n      });\n    }\n  }, [data]);\n\n  // Fetch HAR file onChange of file prop\n  useEffect(() => {\n    if (file) {\n      fetchFile(dispatch)(file, fetchOptions);\n    }\n  }, [file]);\n\n  useEffect(() => {\n    if (actualData.size && onDataLoaded) {\n      onDataLoaded(actualData);\n    }\n  }, [actualData]);\n\n  useEffect(() => {\n    if (error && onDataError) {\n      onDataError(error);\n    }\n  }, [error]);\n\n  // Find nearby request-rowId and update scrollIndex on scrollTimeStamp receive\n  useEffect(() => {\n    const shouldChangeHighlight = showReqDetail ? autoHighlightChange : true;\n    if (scrollTimeStamp && shouldChangeHighlight) {\n      const reqIndex = findRequestIndex({\n        data: requestData,\n        timestamp: scrollTimeStamp,\n        position: scrollRequestPosition,\n      });\n      if (reqIndex || reqIndex === 0) {\n        updateScrollToIndex(dispatch)(requestData.get(reqIndex));\n      }\n    }\n  }, [scrollTimeStamp, actualData]);\n\n  // Scroll to request row onChange of scrollToIndex\n  // setTimeout is required when reqDetail is visible,\n  // it allows DOM to adjust before we scroll it to highlighted request\n  useEffect(() => {\n    if (selectedReqIndex) {\n      setTimeout(() => {\n        const element = document.getElementById(ROW_ID_PREFIX + selectedReqIndex);\n        if (element) {\n          element.scrollIntoView({\n            alignToTop: true,\n            behavior: 'smooth',\n          });\n        }\n      }, 300);\n    }\n  }, [selectedReqIndex]);\n\n  return (\n    <NetworkContext.Provider\n      value={value}\n      {...props}\n    />\n  );\n};\n\nNetworkProvider.propTypes = {\n  autoHighlightChange: PropTypes.bool,\n  data: PropTypes.object,\n  fetchOptions: PropTypes.object,\n  file: PropTypes.string,\n  initialState: PropTypes.object,\n  onDataError: PropTypes.func,\n  onDataLoaded: PropTypes.func,\n  scrollRequestPosition: PropTypes.oneOf(['before', 'after', 'near']),\n  scrollTimeStamp: PropTypes.number,\n};\n\nNetworkProvider.defaultProps = {\n  autoHighlightChange: false,\n  data: null,\n  fetchOptions: { withCredentials: true },\n  file: null,\n  initialState: defaultState,\n  onDataError: null,\n  onDataLoaded: null,\n  scrollRequestPosition: 'near',\n  scrollTimeStamp: null,\n};\n\nexport default NetworkProvider;\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n\nimport Styles from './Button.styles.scss';\n\nconst context = classNames.bind(Styles);\n\nconst Button = ({\n  category,\n  children,\n  className,\n  disabled,\n  href,\n  material,\n  raised,\n  size,\n  ...props\n}) => {\n  const combinedClasses = context('btn', className, {\n    [`btn-${size}`]: size,\n    [material ? `btn-md-${category}` : `btn-${category}`]: true,\n    [`btn-md-${category}-raised`]: raised,\n    'btn-md-raised': raised,\n  });\n\n  const TagName = href && !disabled ? 'a' : 'button';\n  return (\n    <TagName\n      className={combinedClasses}\n      disabled={disabled}\n      href={href}\n      {...props}\n    >\n      {children}\n    </TagName>\n  );\n};\n\nButton.propTypes = {\n  category: PropTypes.oneOf([\n    'default',\n  ]),\n  children: PropTypes.node.isRequired,\n  className: PropTypes.any,\n  disabled: PropTypes.bool,\n  href: PropTypes.string,\n  material: PropTypes.bool,\n  raised: PropTypes.bool,\n  size: PropTypes.oneOf([false, 'sm']),\n  type: PropTypes.oneOf(['submit', 'reset', 'button', 'menu']),\n};\n\nButton.defaultProps = {\n  category: 'default',\n  className: null,\n  disabled: false,\n  href: null,\n  material: false,\n  raised: false,\n  size: false,\n  type: 'button',\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\n\nimport { useNetwork } from './../../state/network/Context';\nimport Styles from './ImportHAR.styles.scss';\nimport Button from './../Common/Button';\n\nconst DROP_FILE_CONFIG = {\n  accept: '.har',\n  multiple: false,\n};\n\nconst ImportHar = ({ showButton, className }) => {\n  const { actions } = useNetwork();\n  const { updateErrorMessage } = actions;\n\n  const prepareData = (newNetworkData) => (\n    actions.updateData({\n      entries: newNetworkData.log.entries,\n      pages: newNetworkData.log.pages,\n    })\n  );\n\n  const onDrop = (files) => {\n    const reader = new FileReader();\n    reader.onabort = () => updateErrorMessage({ title: 'file reading was aborted' });\n    reader.onerror = () => updateErrorMessage({ title: 'file reading has failed' });\n    reader.onload = () => {\n      try {\n        const data = JSON.parse(reader.result);\n        prepareData(data);\n      } catch (error) {\n        updateErrorMessage({ title: 'Error while parsing HAR file' });\n      }\n    };\n    reader.readAsText(files[0]);\n  };\n\n  const { getRootProps, getInputProps } = useDropzone({\n    ...DROP_FILE_CONFIG,\n    onDrop,\n  });\n\n  return (\n    <div {...getRootProps()}>\n      <input {...getInputProps()} />\n      {showButton ? (\n        <Button\n          category=\"default\"\n          className={className}\n          material\n          raised\n          size=\"sm\"\n        >\n          Import HAR\n        </Button>\n      ) : (\n        <p className={Styles['drag-drop']}>Drag and drop HAR file here, or click to select file</p>\n      )}\n    </div>\n  );\n};\n\nImportHar.propTypes = {\n  className: PropTypes.string,\n  showButton: PropTypes.bool,\n};\n\nImportHar.defaultProps = {\n  className: null,\n  showButton: true,\n};\n\nexport default ImportHar;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n\nimport Styles from './Dropdown.styles.scss';\nimport Button from './Button';\n\nconst context = classNames.bind(Styles);\n\nconst Dropdown = ({ items, selected, onChange, className }) => {\n  const [isExpand, setExpand] = useState(false);\n  const [selectedKey, setSelection] = useState(selected !== null ? selected : items[0]);\n  const dropdownItemsRef = useRef(null);\n  const isExpandRef = useRef(isExpand);\n\n  const updateToggle = (toggleState) => {\n    setExpand(toggleState);\n    isExpandRef.current = toggleState;\n  };\n\n  const handleItemSelection = (key) => {\n    setSelection(key);\n    onChange(key);\n    updateToggle(false);\n  };\n\n  const removeFocus = ({ target }) => {\n    if (isExpandRef.current && !dropdownItemsRef.current.contains(target)) {\n      updateToggle(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('click', removeFocus);\n\n    return () => {\n      window.removeEventListener('click', removeFocus);\n    };\n  }, []);\n\n  return (\n    <span\n      ref={dropdownItemsRef}\n      className={context('dropdown-container', className, { expanded: isExpand })}\n    >\n      <Button\n        category=\"default\"\n        className={context('dropdown-toggle', { active: isExpand })}\n        material\n        onClick={() => updateToggle(!isExpand)}\n        raised={isExpand}\n        size=\"sm\"\n      >\n        {selectedKey}\n      </Button>\n      {isExpand && (\n        <ul className={Styles.list}>\n          {items.map((text, index) => (\n            <li\n              key={text}\n              className={context('list-item', { active: text === selectedKey })}\n            >\n              <span\n                className={Styles['item-text']}\n                onClick={() => handleItemSelection(text)}\n                role=\"button\"\n                tabIndex={index}\n              >\n                {text}\n              </span>\n            </li>\n          ))}\n        </ul>\n      )}\n    </span>\n  );\n};\n\nDropdown.propTypes = {\n  className: PropTypes.string,\n  items: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  selected: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nDropdown.defaultProps = {\n  className: null,\n  selected: null,\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Styles from './Search.styles.scss';\nimport Dropdown from './../Common/Dropdown';\n\nconst SEARCH_CATEGORY = ['url', 'body'];\n\nconst Search = ({ name, value, onChange }) => {\n  const handleInputChange = ({ target }) => {\n    onChange({\n      name,\n      value: target.value,\n    });\n  };\n\n  const handleDropdownChange = (selectedKey) => {\n    onChange({\n      name: selectedKey,\n      value,\n    });\n  };\n\n  return (\n    <div className={Styles['search-container']}>\n      <Dropdown\n        className={Styles['prepend-dropdown']}\n        items={SEARCH_CATEGORY}\n        onChange={handleDropdownChange}\n        selected=\"url\"\n      />\n      <input\n        className={Styles.input}\n        onChange={handleInputChange}\n        placeholder=\"Filter\"\n        type=\"text\"\n        value={value}\n      />\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nSearch.defaultProps = {\n  value: '',\n};\n\nexport default Search;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { NETWORK_VIEWER_DEFAULT_OPTIONS } from '../../constants';\n\nexport const ThemeContext = React.createContext(NETWORK_VIEWER_DEFAULT_OPTIONS);\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeContext');\n  }\n\n  return context;\n};\n\nexport const ThemeProvider = (props) => {\n  const { options } = props;\n  const finalOptions = {\n    ...NETWORK_VIEWER_DEFAULT_OPTIONS,\n    ...options,\n  };\n\n  return (\n    <ThemeContext.Provider\n      value={finalOptions}\n      {...props}\n    />\n  );\n};\n\nThemeProvider.propTypes = {\n  options: PropTypes.object,\n};\n\nThemeProvider.defaultProps = {\n  options: NETWORK_VIEWER_DEFAULT_OPTIONS,\n};\n\nexport default ThemeProvider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n\nimport Styles from './Checkbox.styles.scss';\n\nconst context = classNames.bind(Styles);\n\nconst Checkbox = ({\n  containerClassName,\n  isChecked,\n  onChange,\n  children,\n  title,\n}) => (\n  <div className={context('checkbox-container', containerClassName)}>\n    <label\n      className={Styles['checkbox-label']}\n      title={title}\n    >\n      <input\n        checked={isChecked}\n        className={Styles.checkbox}\n        onChange={onChange}\n        type=\"checkbox\"\n      />\n      {children}\n    </label>\n  </div>\n);\n\nCheckbox.propTypes = {\n  children: PropTypes.any.isRequired,\n  containerClassName: PropTypes.string,\n  isChecked: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n  title: PropTypes.string,\n};\n\nCheckbox.defaultProps = {\n  containerClassName: '',\n  isChecked: false,\n  title: '',\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Checkbox from '../Common/Checkbox';\n\nconst ErrorFilter = ({ isError, onChange }) => {\n  const handleChange = () => {\n    onChange(!isError);\n  };\n\n  return (\n    <Checkbox\n      isChecked={isError}\n      onChange={handleChange}\n      title=\"error\"\n    >\n      Errors Only\n    </Checkbox>\n  );\n};\n\nErrorFilter.propTypes = {\n  isError: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default ErrorFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from './../Common/Button';\n\nconst Reset = ({ className, onReset }) => {\n  const handleURLReset = () => {\n    window.history.pushState({}, document.title, '/');\n  };\n\n  const handleReset = () => {\n    handleURLReset();\n    onReset();\n  };\n\n  return (\n    <Button\n      category=\"default\"\n      className={className}\n      material\n      onClick={handleReset}\n      raised\n      size=\"sm\"\n    >\n      Reset\n    </Button>\n  );\n};\n\nReset.propTypes = {\n  className: PropTypes.string,\n  onReset: PropTypes.func.isRequired,\n};\n\nReset.defaultProps = {\n  className: '',\n};\n\nexport default Reset;\n","import React from 'react';\nimport { Row, Col } from 'react-flexbox-grid';\nimport classNames from 'classnames/bind';\n\nimport ImportHar from './../Components/Import/ImportHAR';\nimport Search from './../Components/Filters/Search';\nimport { useNetwork } from './../state/network/Context';\nimport { FILTERS } from './../constants';\nimport Styles from './FilterContainer.styles.scss';\nimport Button from './../Components/Common/Button';\nimport { useTheme } from '../state/theme/Context';\nimport ErrorFilter from '../Components/Filters/ErrorFilter';\nimport Reset from '../Components/Import/Reset';\n\nconst context = classNames.bind(Styles);\n\nconst FilterContainer = () => {\n  const { state, actions } = useNetwork();\n  const { showImportHAR } = useTheme();\n  const filter = state.get('filter');\n  const filterByError = state.get('errorFilter');\n\n  return (\n    <section className={Styles['filters-container']}>\n      <Row>\n        <Col\n          md={5}\n          sm={4}\n          xs={12}\n        >\n          <Search\n            {...state.get('search')}\n            onChange={actions.updateSearch}\n          />\n        </Col>\n        <Col\n          md={7}\n          sm={8}\n          xs={12}\n        >\n          <div className={Styles['filters-button-group']}>\n            {FILTERS.map(({ name, filterBy }) => {\n              const selectedFilter = filterBy.value === filter.value;\n              const buttonStyle = context('filter-button', {\n                'selected-filter': selectedFilter,\n              });\n              return (\n                <Button\n                  key={name}\n                  category=\"default\"\n                  className={buttonStyle}\n                  material\n                  onClick={() => actions.updateFilter(filterBy)}\n                  raised={selectedFilter}\n                  size=\"sm\"\n                >\n                  {name}\n                </Button>\n              );\n            })}\n            <ErrorFilter\n              isError={filterByError}\n              onChange={actions.updateErrorFilter}\n            />\n            {showImportHAR && (\n              <>\n                <ImportHar className={Styles['addon-action-button']} />\n                <Reset\n                  className={Styles['addon-action-button']}\n                  onReset={actions.resetState}\n                />\n              </>\n            )}\n          </div>\n        </Col>\n      </Row>\n    </section>\n  );\n};\n\nexport default FilterContainer;\n","import React from 'react';\nimport classNames from 'classnames/bind';\n\nimport { VIEWER_FIELDS } from './../../constants';\nimport Styles from './NetworkTableHeader.styles.scss';\n\nconst context = classNames.bind(Styles);\n\nconst NetworkTableHeader = () => (\n  <thead className={Styles.thead}>\n    <tr>\n      {Object.entries(VIEWER_FIELDS).map(([datakey, { key, name }]) => (\n        <th\n          key={datakey}\n          className={context('value-cell', key)}\n        >\n          {name}\n        </th>\n      ))}\n      <th className={Styles['timeline-header']}>\n        Waterfall\n      </th>\n    </tr>\n  </thead>\n);\n\nexport default NetworkTableHeader;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n\nimport Styles from './TimeChartTooltip.styles.scss';\nimport { TIMINGS } from '../../constants';\nimport { prepareTooltipData } from '../../utils';\n\nconst context = classNames.bind(Styles);\n\nconst DETAIL = [{\n  title: 'Resource Scheduling',\n  category: ['queueing'],\n}, {\n  title: 'Connection Start',\n  category: ['blocked', 'dns', 'ssl', 'connect'],\n}, {\n  title: 'Request/Response',\n  category: ['send', 'wait', 'receive'],\n}];\n\nconst TimeChartTooltip = ({ data }) => {\n  const tooltipData = useMemo(() => (!data ? null : prepareTooltipData(data)), [data]);\n\n  if (!tooltipData) {\n    return null;\n  }\n\n  return (\n    <div className={Styles.tooltip}>\n      <section className={Styles['tooltip-info']}>\n        <p className={Styles['time-info']}>\n          {`Queued at ${tooltipData.queuedAt}`}\n        </p>\n        <p className={Styles['time-info']}>\n          {`Started at ${tooltipData.startedAt}`}\n        </p>\n      </section>\n      {DETAIL.map(({ title, category }) => (\n        <section\n          key={title}\n          className={Styles['tooltip-info']}\n        >\n          <table className={Styles['waterfall-tooltip-table']}>\n            <thead className={Styles['waterfall-tooltip-thead']}>\n              <tr className={Styles['waterfall-tooltip-tr']}>\n                <th className={Styles['waterfall-tooltip-th']}>\n                  {title}\n                </th>\n                <th className={Styles['waterfall-tooltip-th']}>\n                    DURATION\n                </th>\n              </tr>\n            </thead>\n            <tbody className={Styles['waterfall-tooltip-tbody']}>\n              {category.map((key) => (\n                <tr\n                  key={key}\n                  className={Styles['waterfall-tooltip-tr']}\n                >\n                  <td className={context('waterfall-tooltip-key', key)}>\n                    {TIMINGS[key].name}\n                  </td>\n                  <td className={Styles['waterfall-tooltip-value']}>\n                    {tooltipData[TIMINGS[key].dataKey]}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </section>\n      ))}\n      <section className={Styles['tooltip-info']}>\n        <p className={Styles['time-info']}>\n          {`Total time ${tooltipData.totalTime}`}\n        </p>\n      </section>\n    </div>\n  );\n};\n\nTimeChartTooltip.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default TimeChartTooltip;\n","import React, { useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Popover from 'react-popover';\n\nimport { calcChartAttributes } from './../../utils';\nimport { TIME_CHART_DEFAULT_PROPS, TIME_CHART_SVG_PROPS } from './../../constants';\nimport TimeChartTooltip from './TimeChartTooltip';\n\nconst TimeChart = ({ timings, maxTime }) => {\n  const chartAttributes = useMemo(() => calcChartAttributes(timings, maxTime), [timings, maxTime]);\n  const [isOpen, updateOpen] = useState(false);\n  const displayPopover = () => updateOpen(true);\n  const hidePopover = () => updateOpen(false);\n\n  return (\n    <Popover\n      body={<TimeChartTooltip data={timings} />}\n      isOpen={isOpen}\n      preferPlace=\"below\"\n    >\n      <div\n        onMouseOut={hidePopover}\n        onMouseOver={displayPopover}\n      >\n        <svg {...TIME_CHART_SVG_PROPS}>\n          <g>\n            {chartAttributes.map((chartProps) => (\n              <rect\n                key={chartProps.key}\n                {...chartProps}\n                {...TIME_CHART_DEFAULT_PROPS}\n              />\n            ))}\n          </g>\n        </svg>\n      </div>\n    </Popover>\n  );\n};\n\nTimeChart.propTypes = {\n  maxTime: PropTypes.number.isRequired,\n  timings: PropTypes.object.isRequired,\n};\n\nexport default TimeChart;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport Popover from 'react-popover';\n\nimport { formatValue } from '../../utils';\nimport Styles from './NetworkTableHeader.styles.scss';\nimport { VIEWER_FIELDS } from '../../constants';\n\nconst context = classNames.bind(Styles);\n\nconst NetworkCellValue = ({ datakey, unit, payload }) => {\n  const [isOpen, updateOpen] = useState(false);\n  const displayPopover = () => updateOpen(true);\n  const hidePopover = () => updateOpen(false);\n  const formattedValue = formatValue(datakey, payload[datakey], unit, payload);\n  const shouldDisplayTooltip = (\n    datakey === VIEWER_FIELDS.file.key ||\n    payload.error\n  );\n\n  const getTitle = () => {\n    if (datakey === VIEWER_FIELDS.file.key) {\n      return payload.url;\n    }\n    if (payload.error) {\n      return payload.error;\n    }\n\n    return formattedValue;\n  };\n\n  if (!shouldDisplayTooltip) {\n    return (\n      <td className={context('value-cell', datakey)}>\n        <span className={Styles['value-text']}>\n          {formattedValue}\n        </span>\n      </td>\n    );\n  }\n\n  return (\n    <td className={context('value-cell', datakey)}>\n      <Popover\n        body={<span className={Styles['url-tooltip']}>{getTitle()}</span>}\n        isOpen={isOpen}\n        preferPlace=\"below\"\n      >\n        <span\n          className={Styles['value-text']}\n          onMouseOut={hidePopover}\n          onMouseOver={displayPopover}\n        >\n          {formattedValue}\n        </span>\n      </Popover>\n    </td>\n  );\n};\n\nNetworkCellValue.propTypes = {\n  datakey: PropTypes.string.isRequired,\n  payload: PropTypes.object,\n  unit: PropTypes.string,\n};\n\nNetworkCellValue.defaultProps = {\n  payload: {},\n  unit: null,\n};\n\nexport default NetworkCellValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n\nimport { VIEWER_FIELDS, ROW_ID_PREFIX } from './../../constants';\nimport Styles from './NetworkTableHeader.styles.scss';\nimport TimeChart from './TimeChart';\nimport NetworkCellValue from './NetworkCellValue';\nimport { getStatusClass } from '../../utils';\n\nconst context = classNames.bind(Styles);\n\nconst NetworkTableRow = ({\n  payload,\n  maxTime,\n  scrollHighlight,\n  onSelect,\n}) => {\n  const handleSelectRequest = () => {\n    onSelect(payload);\n  };\n\n  const rowProps = {\n    className: context(\n      'network-table-row',\n      getStatusClass(payload), {\n        highlight: scrollHighlight,\n      }),\n    id: ROW_ID_PREFIX + payload.index,\n    onClick: handleSelectRequest,\n  };\n\n  return (\n    <tr {...rowProps}>\n      {Object.entries(VIEWER_FIELDS).map(([datakey, { key, unit }]) => (\n        <NetworkCellValue\n          key={datakey}\n          datakey={key}\n          payload={payload}\n          unit={unit}\n        />\n      ))}\n      <td className={Styles['timeline-header']}>\n        {payload.time ? (\n          <TimeChart\n            maxTime={maxTime}\n            timings={payload.timings}\n          />\n        ) : ''}\n      </td>\n    </tr>\n  );\n};\n\nNetworkTableRow.propTypes = {\n  maxTime: PropTypes.number.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  payload: PropTypes.object.isRequired,\n  scrollHighlight: PropTypes.bool.isRequired,\n};\n\nexport default NetworkTableRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Styles from './ErrorMessage.styles.scss';\n\nconst ErrorMessage = ({ title, description }) => (\n  <div className={Styles['error-container']}>\n    {title && <h4 className={Styles.title}>{title}</h4>}\n    {description && <p>{description}</p>}\n  </div>\n);\n\nErrorMessage.propTypes = {\n  description: PropTypes.any,\n  title: PropTypes.any,\n};\n\nErrorMessage.defaultProps = {\n  description: null,\n  title: null,\n};\n\nexport default ErrorMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Checkbox from './../../../src/Components/Common/Checkbox';\nimport Styles from './CORSCheckbox.styles.scss';\n\nconst CORSCheckbox = ({ isEnabled, onChange }) => {\n  const handleChange = () => {\n    onChange(!isEnabled);\n  };\n\n  return (\n    <Checkbox\n      containerClassName={Styles['cors-container']}\n      isChecked={isEnabled}\n      onChange={handleChange}\n      title=\"CORS Enable\"\n    >\n      CORS\n    </Checkbox>\n  );\n};\n\nCORSCheckbox.propTypes = {\n  isEnabled: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default CORSCheckbox;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Styles from './URLInput.styles.scss';\nimport Button from './../../../src/Components/Common/Button';\nimport CORSCheckbox from './CORSCheckbox';\n\nconst URLInput = ({ onSubmit }) => {\n  const [url, setURL] = useState('');\n  const [isCORSEnabled, setCORS] = useState(false);\n  const handleInputChange = ({ target }) => {\n    setURL(target.value);\n  };\n\n  const handleSubmit = () => {\n    onSubmit({\n      file: url,\n      isCORSEnabled,\n    });\n  };\n\n  return (\n    <div className={Styles['url-input-container']}>\n      <CORSCheckbox\n        isEnabled={isCORSEnabled}\n        onChange={setCORS}\n      />\n      <input\n        className={Styles.input}\n        onChange={handleInputChange}\n        placeholder=\"HAR file URL\"\n        type=\"text\"\n        value={url}\n      />\n      <Button\n        category=\"default\"\n        className={Styles['postpend-button']}\n        material\n        onClick={handleSubmit}\n        raised\n        size=\"sm\"\n      >\n        GO\n      </Button>\n    </div>\n  );\n};\n\nURLInput.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default URLInput;\n","import React from 'react';\nimport { stringify } from 'qs';\n\nimport Styles from './InputHAR.styles.scss';\nimport URLInput from './URLInput';\n\nconst SAMPLE_HAR_URL = 'https://raw.githubusercontent.com/saucelabs/network-viewer/main/examples/src/data/network.har';\n\nconst InputHAR = () => {\n  const handleURLSubmit = (fetchInfo) => {\n    const { origin, pathname } = document.location;\n    const newURL = `${origin}${pathname}?${stringify(fetchInfo)}`;\n    document.location.href = newURL;\n  };\n\n  return (\n    <div className={Styles['input-har-container']}>\n      <h4 className={Styles['input-har-text']}>\n        OR add HAR file URL in the below input box\n      </h4>\n      <URLInput onSubmit={handleURLSubmit} />\n      <p>\n        <span>\n          For Example use this har file\n        </span>\n        <a\n          className={Styles['example-url']}\n          href={SAMPLE_HAR_URL}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          {SAMPLE_HAR_URL}\n        </a>\n      </p>\n    </div>\n  );\n};\n\nexport default InputHAR;\n","import React from 'react';\nimport classNames from 'classnames/bind';\nimport PropTypes from 'prop-types';\n\nimport NetworkTableHeader from './../Components/NetworkTable/NetworkTableHeader';\nimport NetworkTableRow from './../Components/NetworkTable/NetworkTableRow';\nimport { useNetwork } from './../state/network/Context';\nimport ImportHar from './../Components/Import/ImportHAR';\nimport Styles from './NetworkTableContainer.styles.scss';\nimport ErrorMessage from './../Components/ErrorMessage';\nimport { useTheme } from '../state/theme/Context';\nimport InputHAR from '../Components/Import/InputHAR';\n\nconst context = classNames.bind(Styles);\n\nconst NetworkTableContainer = ({ onRequestSelect }) => {\n  const { state, actions } = useNetwork();\n  const { showImportHAR } = useTheme();\n  const actualData = state.get('actualData');\n  const data = state.get('data');\n  const totalNetworkTime = state.get('totalNetworkTime');\n  const error = state.get('error');\n  const selectedReqIndex = state.get('selectedReqIndex');\n  const showReqDetail = state.get('showReqDetail');\n  const containerClassName = context('table-container', {\n    'limited-cols': showReqDetail,\n  });\n  const handleReqSelect = (payload) => {\n    actions.updateScrollToIndex(payload.index);\n    actions.selectRequest(payload);\n    onRequestSelect(payload);\n  };\n\n  if (error) {\n    return (\n      <ErrorMessage {...error} />\n    );\n  }\n\n  if (!actualData.size) {\n    return (\n      <section className={Styles['table-container']}>\n        {showImportHAR && (\n          <>\n            <ImportHar showButton={false} />\n            <InputHAR />\n          </>\n        )}\n      </section>\n    );\n  }\n\n  return (\n    <section className={containerClassName}>\n      <table className={Styles.table}>\n        <NetworkTableHeader />\n        <tbody className={Styles['table-content']}>\n          {Array.from(data).map((rowInfo) => (\n            <NetworkTableRow\n              key={rowInfo.index}\n              maxTime={totalNetworkTime}\n              onSelect={handleReqSelect}\n              payload={rowInfo}\n              scrollHighlight={selectedReqIndex === rowInfo.index}\n            />\n          ))}\n        </tbody>\n      </table>\n    </section>\n  );\n};\n\nNetworkTableContainer.propTypes = {\n  onRequestSelect: PropTypes.func,\n};\n\nNetworkTableContainer.defaultProps = {\n  onRequestSelect: () => {},\n};\n\nexport default NetworkTableContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Styles from './LoaderContainer.styles.scss';\n\nconst LoaderContainer = ({ children, show, text }) => {\n  const spinnerColor = Styles.brandBlue;\n  const uniqueId = `Gradient-${Math.round(Math.random() * 10000000)}`;\n\n  return !show ? children : (\n    <section className={Styles['loader-container']}>\n      <div className={Styles.spin}>\n        <svg\n          viewBox=\"0 0 100 100\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <defs>\n            <linearGradient id={uniqueId}>\n              <stop\n                offset=\"0%\"\n                stopColor={spinnerColor}\n              />\n              <stop\n                offset=\"75%\"\n                stopColor={spinnerColor}\n                stopOpacity=\"0\"\n              />\n              <stop\n                offset=\"100%\"\n                stopColor={spinnerColor}\n                stopOpacity=\"0\"\n              />\n            </linearGradient>\n          </defs>\n          <circle\n            cx=\"50\"\n            cy=\"50\"\n            fill=\"transparent\"\n            r=\"43\"\n            stroke={`url(#${uniqueId})`}\n            strokeWidth=\"14\"\n          />\n        </svg>\n      </div>\n      { text && <p className={Styles.text}>{text}</p> }\n    </section>\n  );\n};\n\nLoaderContainer.propTypes = {\n  children: PropTypes.node,\n  show: PropTypes.bool,\n  text: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n};\n\nLoaderContainer.defaultProps = {\n  children: null,\n  show: true,\n  text: null,\n};\n\nexport default LoaderContainer;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n\nimport Styles from './Tabs.styles.scss';\n\nconst context = classNames.bind(Styles);\n\nconst Tabs = ({\n  onUpdate,\n  selectedKey,\n  defaultSelectedKey,\n  children,\n  navTabsClassName,\n  tabsContainerClassName,\n  navLinkClassName,\n  activeClassName,\n}) => {\n  const [items, updateItems] = useState([]);\n\n  useEffect(() => {\n    const itemsCollection = [];\n    React.Children.forEach(children, (element) => {\n      if (React.isValidElement(element)) {\n        const {\n          name,\n          eventKey: key,\n          children: component,\n        } = element.props;\n        itemsCollection.push({\n          name,\n          key,\n          component,\n        });\n      }\n    });\n    updateItems(itemsCollection);\n  }, [children]);\n\n  const [activeTab, updateTab] = useState(\n    defaultSelectedKey || (items && items.length ? items[0].key : null),\n  );\n  const handleUpdate = (key) => {\n    updateTab(key);\n    if (onUpdate) {\n      onUpdate(key);\n    }\n  };\n\n  const renderItem = () => {\n    const selectedTab = items.find(({ key }) => key === (selectedKey || activeTab));\n    return selectedTab ? selectedTab.component : null;\n  };\n\n  return (\n    <>\n      <nav className={context('nav-tabs', navTabsClassName)}>\n        {items.map(({ key: item, name }, index) => (\n          <a\n            key={item}\n            className={context('tab-item', navLinkClassName, {\n              [activeClassName || Styles.active]: activeTab === item,\n            })}\n            onClick={() => handleUpdate(item)}\n            role=\"tab\"\n            tabIndex={index}\n          >\n            {name}\n          </a>\n        ))}\n      </nav>\n      <section className={context(tabsContainerClassName)}>\n        {renderItem()}\n      </section>\n    </>\n  );\n};\n\nTabs.propTypes = {\n  activeClassName: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  defaultSelectedKey: PropTypes.string,\n  navLinkClassName: PropTypes.string,\n  navTabsClassName: PropTypes.string,\n  onUpdate: PropTypes.func,\n  selectedKey: PropTypes.string,\n  tabsContainerClassName: PropTypes.string,\n};\n\nTabs.defaultProps = {\n  activeClassName: null,\n  defaultSelectedKey: null,\n  navLinkClassName: null,\n  navTabsClassName: null,\n  onUpdate: null,\n  selectedKey: null,\n  tabsContainerClassName: null,\n};\n\nexport default Tabs;\n","import PropTypes from 'prop-types';\n\nconst Tab = ({ children }) => children;\n\nTab.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Tab;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Styles from './../Headers.styles.scss';\nimport { GENERAL_HEADERS } from '../../../constants';\n\nconst General = ({ data }) => (\n  <div className={Styles['header-detail']}>\n    {Object.entries(GENERAL_HEADERS).map(([dataKey, { key, name }]) => (\n      <p\n        key={dataKey}\n        className={Styles['info-row']}\n      >\n        <span className={Styles['info-caption']}>\n          {`${name}:`}\n        </span>\n        <span className={Styles['info-value']}>\n          {key === 'status' && data.error ? data.error : data[key]}\n        </span>\n      </p>\n    ))}\n  </div>\n);\n\nGeneral.propTypes = {\n  data: PropTypes.object,\n};\n\nGeneral.defaultProps = {\n  data: null,\n};\n\nexport default General;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Styles from './../Headers.styles.scss';\n\nconst Response = ({ data }) => (\n  <div className={Styles['header-detail']}>\n    {data.headers.response.map(({ name, value }, index) => (\n      <p\n        key={`${name}-${index}`}\n        className={Styles['info-row']}\n      >\n        <span className={Styles['info-caption']}>\n          {`${name}:`}\n        </span>\n        <span className={Styles['info-value']}>\n          {value}\n        </span>\n      </p>\n    ))}\n  </div>\n);\n\nResponse.propTypes = {\n  data: PropTypes.object,\n};\n\nResponse.defaultProps = {\n  data: null,\n};\n\nexport default Response;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Styles from './../Headers.styles.scss';\n\nconst Request = ({ data }) => (\n  <div className={Styles['header-detail']}>\n    {data.headers.request.map(({ name, value }, index) => (\n      <p\n        key={`${name}-${index}`}\n        className={Styles['info-row']}\n      >\n        <span className={Styles['info-caption']}>\n          {`${name}:`}\n        </span>\n        <span className={Styles['info-value']}>\n          {value}\n        </span>\n      </p>\n    ))}\n  </div>\n);\n\nRequest.propTypes = {\n  data: PropTypes.object,\n};\n\nRequest.defaultProps = {\n  data: null,\n};\n\nexport default Request;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Styles from './../Headers.styles.scss';\n\nconst QueryString = ({ data, isPayloadTransformed }) => (\n  <div className={Styles['header-detail']}>\n    {data.headers.queryString.map(({ name, value }, index) => (\n      <p\n        key={`${name}-${index}`}\n        className={Styles['info-row']}\n      >\n        <span className={Styles['info-caption']}>\n          {`${name}:`}\n        </span>\n        <span className={Styles['info-value']}>\n          {isPayloadTransformed ? decodeURIComponent(value) : value}\n        </span>\n      </p>\n    ))}\n  </div>\n);\n\nQueryString.propTypes = {\n  data: PropTypes.object,\n  isPayloadTransformed: PropTypes.bool.isRequired,\n};\n\nQueryString.defaultProps = {\n  data: null,\n};\n\nexport default QueryString;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Styles from './../Headers.styles.scss';\n\nconst FormData = ({ data, isPayloadTransformed }) => (\n  <div className={Styles['header-detail']}>\n    {data.headers.postData.params.map(({ name, value }, index) => (\n      <p\n        key={`${name}-${index}`}\n        className={Styles['info-row']}\n      >\n        <span className={Styles['info-caption']}>\n          {`${name}:`}\n        </span>\n        <span className={Styles['info-value']}>\n          {isPayloadTransformed ? decodeURIComponent(value) : value}\n        </span>\n      </p>\n    ))}\n  </div>\n);\n\nFormData.propTypes = {\n  data: PropTypes.object,\n  isPayloadTransformed: PropTypes.bool.isRequired,\n};\n\nFormData.defaultProps = {\n  data: null,\n};\n\nexport default FormData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst IconCaretUp = ({ className }) => (\n  <svg\n    className={className}\n    height=\"8\"\n    preserveAspectRatio=\"xMidYMid\"\n    viewBox=\"0 0 13 8\"\n    width=\"13\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g>\n      <path\n        d=\"M11.547,8.008 C11.547,8.008 6.500,2.919 6.500,2.919 C6.500,2.919 1.453,8.008 1.453,8.008 C1.453,8.008 0.011,6.554 0.011,6.554 C0.011,6.554 6.500,0.011 6.500,0.011 C6.500,0.011 12.989,6.554 12.989,6.554 C12.989,6.554 11.547,8.008 11.547,8.008 Z\"\n        fillRule=\"evenodd\"\n      />\n    </g>\n  </svg>\n);\n\nIconCaretUp.propTypes = {\n  className: PropTypes.string,\n};\n\nIconCaretUp.defaultProps = {\n  className: '',\n};\n\nexport default IconCaretUp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { HEADERS_TITLES, PAYLOAD_CAPTIONS } from './../../../constants';\nimport IconCaretUp from './../../../icons/IconCaretUp';\nimport Styles from './../Headers.styles.scss';\n\nconst HeaderTitle = ({\n  onClick,\n  eventKey,\n  isEncodeEnabled,\n  onPayloadTransform,\n  isPayloadTransformed,\n  isParseEnabled,\n}) => {\n  const payloadStatus = PAYLOAD_CAPTIONS[isParseEnabled ? 'parse' : 'encode'][isPayloadTransformed];\n\n  return (\n    <div className={Styles['header-title']}>\n      <span\n        onClick={() => onClick(HEADERS_TITLES[eventKey].key)}\n        role=\"button\"\n        tabIndex={0}\n      >\n        <IconCaretUp className={Styles['caret-icon']} />\n        {HEADERS_TITLES[eventKey].name}\n      </span>\n      {(isEncodeEnabled || isParseEnabled) && (\n        <span\n          className={Styles['encode-url']}\n          onClick={onPayloadTransform}\n          role=\"button\"\n          tabIndex={0}\n        >\n          {`view ${payloadStatus}`}\n        </span>\n      )}\n    </div>\n  );\n};\n\nHeaderTitle.propTypes = {\n  eventKey: PropTypes.string.isRequired,\n  isEncodeEnabled: PropTypes.bool,\n  isParseEnabled: PropTypes.bool,\n  isPayloadTransformed: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n  onPayloadTransform: PropTypes.func.isRequired,\n};\n\nHeaderTitle.defaultProps = {\n  isEncodeEnabled: false,\n  isParseEnabled: false,\n  isPayloadTransformed: true,\n};\n\nexport default HeaderTitle;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n\nimport Styles from './../Headers.styles.scss';\nimport HeaderTitle from './HeaderTitle';\n\nconst context = classNames.bind(Styles);\n\nconst HeaderInfo = ({\n  eventKey,\n  data,\n  component,\n  isEncodeEnabled,\n  isParseEnabled,\n}) => {\n  const [isVisible, updateVisibleStates] = useState(true);\n  const [isPayloadTransformed, updateTransform] = useState(true);\n\n  const handlePayloadTransform = () => updateTransform(!isPayloadTransformed);\n  const ChildComponent = () => component({\n    data,\n    isPayloadTransformed,\n    onChangeEncode: handlePayloadTransform,\n  });\n\n  return (\n    <div className={context('header-info', { active: isVisible })}>\n      <HeaderTitle\n        eventKey={eventKey}\n        isEncodeEnabled={isEncodeEnabled}\n        isParseEnabled={isParseEnabled}\n        isPayloadTransformed={isPayloadTransformed}\n        onClick={() => updateVisibleStates(!isVisible)}\n        onPayloadTransform={handlePayloadTransform}\n      />\n      {isVisible && <ChildComponent /> }\n    </div>\n  );\n};\n\nHeaderInfo.propTypes = {\n  component: PropTypes.func.isRequired,\n  data: PropTypes.object,\n  eventKey: PropTypes.string.isRequired,\n  isEncodeEnabled: PropTypes.bool,\n  isParseEnabled: PropTypes.bool,\n};\n\nHeaderInfo.defaultProps = {\n  data: null,\n  isEncodeEnabled: false,\n  isParseEnabled: false,\n};\n\nexport default HeaderInfo;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Styles from './../Headers.styles.scss';\nimport { parseRequestPayload } from '../../../utils';\n\nconst RequestPayload = ({ data, isPayloadTransformed }) => {\n  const payloadData = data.headers.postData.text;\n  const parsedData = useMemo(() => parseRequestPayload(payloadData), [payloadData]);\n\n  return (\n    <div className={Styles['header-detail']}>\n      {isPayloadTransformed ? (\n        <div className={Styles['response-content']}>\n          <pre className={Styles['log-body-colorless']}>\n            {parsedData}\n          </pre>\n        </div>\n      ) : payloadData}\n    </div>\n  );\n};\n\nRequestPayload.propTypes = {\n  data: PropTypes.object,\n  isPayloadTransformed: PropTypes.bool.isRequired,\n};\n\nRequestPayload.defaultProps = {\n  data: null,\n};\n\nexport default RequestPayload;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport General from './headers/General';\nimport Response from './headers/Response';\nimport Request from './headers/Request';\nimport QueryString from './headers/QueryString';\nimport FormData from './headers/FormData';\nimport HeaderInfo from './headers/HeaderInfo';\nimport Styles from './Headers.styles.scss';\nimport RequestPayload from './headers/RequestPayload';\n\nconst Headers = ({ data }) => (!data ? null : (\n  <section className={Styles['headers-container']}>\n    <HeaderInfo\n      component={General}\n      data={data}\n      eventKey=\"general\"\n    />\n    <HeaderInfo\n      component={Response}\n      data={data}\n      eventKey=\"response\"\n    />\n    <HeaderInfo\n      component={Request}\n      data={data}\n      eventKey=\"request\"\n    />\n    {data.headers.queryString && data.headers.queryString.length && (\n      <HeaderInfo\n        component={QueryString}\n        data={data}\n        eventKey=\"queryString\"\n        isEncodeEnabled\n      />\n    )}\n    {data.headers.postData && data.headers.postData.params && (\n      <HeaderInfo\n        component={FormData}\n        data={data}\n        eventKey=\"formData\"\n        isEncodeEnabled\n      />\n    )}\n    {data.headers.postData && data.headers.postData.text && (\n      <HeaderInfo\n        component={RequestPayload}\n        data={data}\n        eventKey=\"requestPayload\"\n        isParseEnabled\n      />\n    )}\n  </section>\n));\n\nHeaders.propTypes = {\n  data: PropTypes.object,\n};\n\nHeaders.defaultProps = {\n  data: null,\n};\n\nexport default Headers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst IconCloseSign = ({ className }) => (\n  <svg\n    className={className}\n    height=\"16\"\n    viewBox=\"0 0 17 16\"\n    width=\"17\"\n  >\n    <g\n      fill=\"none\"\n      fillRule=\"evenodd\"\n      stroke=\"#ACB2B8\"\n      strokeLinecap=\"round\"\n      transform=\"translate(1)\"\n    >\n      <path d=\"M0 0L15.2460858 15.2460858M15.2460858 0L0 15.2460858\" />\n    </g>\n  </svg>\n);\n\nIconCloseSign.propTypes = {\n  className: PropTypes.string,\n};\n\nIconCloseSign.defaultProps = {\n  className: '',\n};\n\nexport default IconCloseSign;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Styles from './Response.styles.scss';\n\nconst NoResponseText = () => (\n  <h4 className={Styles['no-response']}>This request has no response data available.</h4>\n);\n\nconst Response = ({ data }) => {\n  const content = data && data.body ? data.body : null;\n\n  if (!content) {\n    return <NoResponseText />;\n  }\n\n  return (\n    <div className={Styles['response-content']}>\n      <pre className={Styles['log-body-colorless']}>\n        {content}\n      </pre>\n    </div>\n  );\n};\n\nResponse.propTypes = {\n  data: PropTypes.object,\n};\n\nResponse.defaultProps = {\n  data: null,\n};\n\nexport default Response;\n","import React from 'react';\n\nimport { useNetwork } from './../state/network/Context';\nimport Styles from './ReqDetailContainer.styles.scss';\nimport Tabs from '../Components/Common/Tabs';\nimport Tab from '../Components/Common/Tab';\nimport Headers from './../Components/ReqDetail/Headers';\nimport IconCloseSign from './../icons/IconCloseSign';\nimport Response from '../Components/ReqDetail/Response';\n\nconst ReqDetailContainer = () => {\n  const { actions, state } = useNetwork();\n  const reqDetail = state.get('reqDetail');\n  const handleCloseClick = () => {\n    actions.selectRequest(null);\n  };\n\n  return (\n    <div className={Styles['req-detail-container']}>\n      <button\n        className={Styles['close-button']}\n        onClick={handleCloseClick}\n        type=\"button\"\n      >\n        <IconCloseSign className={Styles['close-icon']} />\n      </button>\n      <Tabs\n        activeClassName={Styles.active}\n        defaultSelectedKey=\"headers\"\n        navLinkClassName={Styles['tab-link']}\n        navTabsClassName={Styles['nav-tabs']}\n        tabsContainerClassName={Styles['tabs-container']}\n      >\n        <Tab\n          eventKey=\"headers\"\n          name=\"Headers\"\n        >\n          <Headers data={reqDetail} />\n        </Tab>\n        <Tab\n          eventKey=\"response\"\n          name=\"Response\"\n        >\n          <Response data={reqDetail} />\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default ReqDetailContainer;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { calcChartAttributes } from './../../utils';\nimport { TIMELINE_DATA_POINT_HEIGHT } from '../../constants';\n\nconst TimelineDatapoint = ({ payload, maxTime, cx, cy, index }) => {\n  const { timings } = payload;\n  const chartAttributes = useMemo(\n    () => calcChartAttributes(timings, maxTime, cx, index, cy), [timings, maxTime],\n  );\n  if (!payload) {\n    return null;\n  }\n\n  return (\n    <g>\n      {chartAttributes.map((chartProps) => (\n        <rect\n          key={chartProps.key}\n          {...chartProps}\n          height={TIMELINE_DATA_POINT_HEIGHT}\n        />\n      ))}\n    </g>\n  );\n};\n\nTimelineDatapoint.propTypes = {\n  cx: PropTypes.number,\n  cy: PropTypes.number,\n  index: PropTypes.number,\n  maxTime: PropTypes.number.isRequired,\n  payload: PropTypes.object,\n};\n\nTimelineDatapoint.defaultProps = {\n  cx: 0,\n  cy: 0,\n  index: 0,\n  payload: null,\n};\n\nexport default TimelineDatapoint;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Styles from './TimelineTooltip.styles.scss';\nimport { formatTime } from '../../utils';\n\nconst TimelineTooltip = ({ payload }) => {\n  if (!payload || !payload.length) {\n    return null;\n  }\n\n  return (\n    <div className={Styles.tooltip}>\n      <div className={Styles.content}>\n        {payload[0].payload.filename}\n      </div>\n      <div>\n        {`Started at: ${formatTime(payload[0].payload.timings.startTime)}`}\n      </div>\n    </div>\n  );\n};\n\nTimelineTooltip.propTypes = {\n  payload: PropTypes.array,\n};\n\nTimelineTooltip.defaultProps = {\n  payload: null,\n};\n\nexport default TimelineTooltip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ScatterChart, Scatter, XAxis, YAxis, ResponsiveContainer, Tooltip } from 'recharts';\n\nimport Styles from './TimelineChart.styles.scss';\nimport TimelineDatapoint from './TimelineDatapoint';\nimport { formatTime } from '../../utils';\nimport TimelineTooltip from './TimelineTooltip';\n\nconst TimelineChart = ({ chartData, totalNetworkTime }) => (\n  <div className={Styles['chart-container']}>\n    <ResponsiveContainer\n      height={100}\n      width=\"100%\"\n    >\n      <ScatterChart\n        className={Styles['scatter-chart']}\n      >\n        <XAxis\n          axisLine={false}\n          dataKey=\"timings.startTime\"\n          domain={[0, totalNetworkTime]}\n          interval=\"preserveStartEnd\"\n          orientation=\"top\"\n          tickCount={10}\n          tickFormatter={formatTime}\n          tickLine={false}\n          type=\"number\"\n        />\n        <YAxis\n          dataKey=\"index\"\n          domain={['min', 'max']}\n          hide\n          reversed\n        />\n        <Tooltip content={<TimelineTooltip />} />\n        <Scatter\n          data={chartData}\n          shape={(\n            <TimelineDatapoint\n              maxTime={totalNetworkTime}\n            />\n          )}\n        />\n      </ScatterChart>\n    </ResponsiveContainer>\n  </div>\n);\n\nTimelineChart.propTypes = {\n  chartData: PropTypes.array.isRequired,\n  totalNetworkTime: PropTypes.number.isRequired,\n};\n\nexport default TimelineChart;\n","import React from 'react';\n\nimport { useNetwork } from './../state/network/Context';\nimport Styles from './TimelineContainer.styles.scss';\nimport TimelineChart from './../Components/TimelineChart/TimelineChart';\n\nconst TimelineContainer = () => {\n  const { state } = useNetwork();\n  const data = state.get('data');\n  const actualData = state.get('actualData');\n  const error = state.get('error');\n  const totalNetworkTime = state.get('totalNetworkTime');\n  if (error || !actualData.size) {\n    return null;\n  }\n  return (\n    <section className={Styles['timeline-container']}>\n      <TimelineChart\n        chartData={data.toArray()}\n        totalNetworkTime={totalNetworkTime}\n      />\n    </section>\n  );\n};\n\nexport default TimelineContainer;\n","import React from 'react';\nimport classNames from 'classnames/bind';\nimport PropTypes from 'prop-types';\n\nimport Styles from './NetworkTableFooter.styles.scss';\nimport { formatSize, formatTime } from './../../utils';\n\nconst context = classNames.bind(Styles);\n\nconst NetworkTableFooter = ({ dataSummary, showAllInfo }) => (\n  <div className={context('footer')}>\n    {showAllInfo ? (\n      <>\n        <span>{`${dataSummary.get('totalRequests')} requests`}</span>\n        <span>{`${formatSize(dataSummary.get('totalTransferredSize'))} transferred`}</span>\n        <span>{`${formatSize(dataSummary.get('totalUncompressedSize'))} resources`}</span>\n        <span>{`Finished: ${formatTime(dataSummary.get('finish'))}`}</span>\n        <span>{`DOMContentLoaded: ${formatTime(dataSummary.get('timings').DOMContentLoaded)}`}</span>\n        <span>{`Load: ${formatTime(dataSummary.get('timings').onLoad)}`}</span>\n      </>\n    ) : (\n      <span>{`${dataSummary.get('totalRequests')} requests`}</span>\n    )}\n  </div>\n);\n\nNetworkTableFooter.propTypes = {\n  dataSummary: PropTypes.object.isRequired,\n  showAllInfo: PropTypes.bool,\n};\n\nNetworkTableFooter.defaultProps = {\n  showAllInfo: true,\n};\n\nexport default NetworkTableFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useNetwork } from '../state/network/Context';\nimport FilterContainer from './FilterContainer';\nimport NetworkTableContainer from './NetworkTableContainer';\nimport LoaderContainer from './../Components/LoaderContainer';\nimport { FETCH_FILE_LOAD_TEXT } from '../constants';\nimport ReqDetailContainer from './ReqDetailContainer';\nimport Styles from './MainContainer.styles.scss';\nimport TimelineContainer from './TimelineContainer';\nimport { useTheme } from '../state/theme/Context';\nimport NetworkTableFooter from './../Components/NetworkTable/NetworkTableFooter';\n\nconst MainContainer = ({ onRequestSelect }) => {\n  const { state } = useNetwork();\n  const { showTimeline } = useTheme();\n  const loading = state.get('loading');\n  const showReqDetail = state.get('showReqDetail');\n  const dataSummary = state.get('dataSummary');\n  const actualData = state.get('actualData');\n\n  return (\n    <>\n      <LoaderContainer\n        show={loading}\n        text={FETCH_FILE_LOAD_TEXT}\n      >\n        {showTimeline && <TimelineContainer />}\n        <FilterContainer />\n        <section className={Styles['main-container']}>\n          <NetworkTableContainer onRequestSelect={onRequestSelect} />\n          {showReqDetail && <ReqDetailContainer />}\n        </section>\n        {actualData.size ? <NetworkTableFooter dataSummary={dataSummary} /> : null}\n      </LoaderContainer>\n    </>\n  );\n};\n\nMainContainer.propTypes = {\n  onRequestSelect: PropTypes.func,\n};\n\nMainContainer.defaultProps = {\n  onRequestSelect: () => {},\n};\n\nexport default MainContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n\nimport NetworkProvider from './state/network/NetworkProvider';\nimport MainContainer from './Containers/MainContainer';\nimport Styles from './NetworkViewer.styles.scss';\nimport ThemeProvider from './state/theme/Context';\n\nconst contextClassNames = classNames.bind(Styles);\n\nconst NetworkViewer = ({\n  file,\n  data,\n  fetchOptions,\n  scrollTimeStamp,\n  options,\n  onRequestSelect,\n  scrollRequestPosition,\n  autoHighlightChange,\n  onDataLoaded,\n  onDataError,\n  containerClassName,\n}) => (\n  <section className={contextClassNames('network-viewer', containerClassName)}>\n    <ThemeProvider options={options}>\n      <NetworkProvider\n        autoHighlightChange={autoHighlightChange}\n        data={data}\n        fetchOptions={fetchOptions}\n        file={file}\n        onDataError={onDataError}\n        onDataLoaded={onDataLoaded}\n        scrollRequestPosition={scrollRequestPosition}\n        scrollTimeStamp={scrollTimeStamp}\n      >\n        <MainContainer onRequestSelect={onRequestSelect} />\n      </NetworkProvider>\n    </ThemeProvider>\n  </section>\n);\n\nNetworkViewer.propTypes = {\n  autoHighlightChange: PropTypes.bool,\n  containerClassName: PropTypes.string,\n  data: PropTypes.object,\n  fetchOptions: PropTypes.object,\n  file: PropTypes.string,\n  onDataError: PropTypes.func,\n  onDataLoaded: PropTypes.func,\n  onRequestSelect: PropTypes.func,\n  options: PropTypes.object,\n  scrollRequestPosition: PropTypes.oneOf(['before', 'after', 'near']),\n  scrollTimeStamp: PropTypes.number,\n};\n\nNetworkViewer.defaultProps = {\n  autoHighlightChange: false,\n  containerClassName: null,\n  data: null,\n  fetchOptions: { withCredentials: true },\n  file: null,\n  onDataError: null,\n  onDataLoaded: null,\n  onRequestSelect: () => {},\n  options: null,\n  scrollRequestPosition: 'near',\n  scrollTimeStamp: null,\n};\n\nexport default NetworkViewer;\n","import React from 'react';\n\nimport Styles from './Footer.module.scss';\n\nconst Footer = () => (\n  <footer className={Styles.footer}>\n    <span>\n      For more information please check\n    </span>\n    <a\n      className={Styles.link}\n      href=\"//github.com/saucelabs/network-viewer\"\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n    >\n      Github\n    </a>\n  </footer>\n);\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport classNames from 'classnames/bind';\n\nimport { NetworkViewer } from 'network-viewer';\nimport Styles from './App.module.scss';\nimport Footer from './Components/Footer';\nimport { parseQueryString } from './utils';\n\nconst contextClassNames = classNames.bind(Styles);\n\nconst App = () => {\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  const [fileOptions, setFileOptions] = useState(null);\n  const networkContainerClassName = contextClassNames('network-container', {\n    'network-container-data-loaded': isDataLoaded,\n  });\n\n  // read file queryString and load HAR file\n  useState(() => {\n    const parsedData = parseQueryString();\n    if (parsedData) {\n      setFileOptions(parsedData);\n    }\n  }, []);\n\n  return (\n    <section className={Styles['app-container']}>\n      <div className={networkContainerClassName}>\n        <NetworkViewer\n          onDataLoaded={() => setIsDataLoaded(true)}\n          {...fileOptions}\n        />\n      </div>\n      {!isDataLoaded && (\n        <div className={Styles['app-info']}>\n          <Footer />\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default App;\n","import { parse } from 'qs';\n\nexport const parseQueryString = () => {\n  const parsedData = parse(document.location.search, { ignoreQueryPrefix: true });\n  if (parsedData && Object.keys(parsedData).length) {\n    return {\n      file: parsedData.file,\n      fetchOptions: {\n        withCredentials: parsedData.isCORSEnabled === 'true',\n      },\n    };\n  }\n\n  return null;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"brandBlue\":\"#1395f0\",\"app-container\":\"App_app-container__RxDqx\",\"network-container\":\"App_network-container__8rwSL\",\"network-container-data-loaded\":\"App_network-container-data-loaded__1PQDw\"};"],"sourceRoot":""}